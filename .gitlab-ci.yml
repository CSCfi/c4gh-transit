stages:
  - lint
  - test
  - build
  - release

include:
  - project: 'sds-dev/releases'
    ref: main
    file: 'releases.yml'

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
    GOCACHE: $CI_PROJECT_DIR/.go-build

lint:
  stage: lint
  extends: .go-cache
  variables:
    GOLANGCI_LINT_CACHE: $CI_PROJECT_DIR/.cache
  rules:
    # We don't run on tags and default branch
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      when: never
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: '$CI_COMMIT_TAG !~ "/^$/"'
      when: never
  tags:
    - sds
  script:
    - mkdir -p .cache
    - golangci-lint run -v ./... --timeout 10m -E bodyclose,gocritic,gofmt,gosec,govet,nestif,nlreturn,revive,rowserrcheck --exclude G401,G501,G107 --out-format code-climate | tee gl-code-quality-report.json
    - go fmt ./...
    - go vet ./...
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths:
      - gl-code-quality-report.json
  after_script:
    - sudo rm -rf .go/pkg

jfrog-go-audit:
  stage: test
  rules:
    # We don't run on tags and default branch
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      when: never
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: '$CI_COMMIT_TAG !~ "/^$/"'
      when: never
  tags:
    - sds
  script:
    # Configure JFrog Artifactory repositories
    - jf config import "${JF_CONFIG}"
    - jf go-config --repo-resolve $ARTIFACTORY_SERVER
    # Audit Go project
    - jf audit --go --licenses --extended-table --min-severity=Medium

test:
  stage: test
  rules:
    # We don't run on tags and default branch
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      when: never
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: '$CI_COMMIT_TAG !~ "/^$/"'
      when: never
  tags:
    - sds
  script:
    - GO_BIN=$(which go)
    - sudo ${GO_BIN} test -timeout 30m -v ./c4ghtransit

build-binary:
  stage: build
  tags:
    - sds
  rules:
    - if: '$CI_COMMIT_TAG !~ "/^$/"'
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      when: always
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
  script:
    - mkdir -p output
    - CGO_ENABLED=0 go build -tags netgo -a -v -o output/c4ghtransit c4ghtransit/cmd/c4ghtransit/main.go
    # Configure JFrog Artifactory repositories
    - jf config import "${JF_CONFIG}"
    # Scan binary
    - jf s --licenses output/c4ghtransit --repo ${ARTIFACTORY_SERVER_BINARY_REPO}
    - >
      if [ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]; then
        echo Pushing latest plugin build
        jf rt u output/c4ghtransit "$ARTIFACTORY_SERVER_BINARY_REPO/$CI_PROJECT_NAME/c4ghtransit"
      else
        echo Pushing "${CI_COMMIT_TAG}" plugin build
        jf rt u output/c4ghtransit $ARTIFACTORY_SERVER_BINARY_REPO/$CI_PROJECT_NAME/c4ghtransit-${CI_COMMIT_TAG}
      fi


release:
  extends: .automated-release
  release:
    description: "Vault crypt4gh-transit plugin - automated release"
    assets:
      links:
        - name: c4ghtransit-${RELEASE_VERSION}
          url: https://$ARTIFACTORY_SERVER/$ARTIFACTORY_SERVER_BINARY_REPO/$CI_PROJECT_NAME/c4ghtransit-${RELEASE_VERSION}
